document.addEventListener('DOMContentLoaded', () => {
    // Language Toggle
    const langButton = document.getElementById('langButton');
    const htmlElement = document.documentElement;
    const langText = langButton.querySelector('.current-lang');

    function toggleLanguage() {
        const currentLang = htmlElement.getAttribute('data-lang');
        const newLang = currentLang === 'uk' ? 'en' : 'uk';
        htmlElement.setAttribute('data-lang', newLang);
        langText.textContent = newLang.toUpperCase();
        localStorage.setItem('language', newLang);
    }

    // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—É –º–æ–≤—É
    const savedLang = localStorage.getItem('language');
    if (savedLang) {
        htmlElement.setAttribute('data-lang', savedLang);
        langText.textContent = savedLang.toUpperCase();
    }

    langButton.addEventListener('click', toggleLanguage);

    // Theme Toggle
    const themeButton = document.getElementById('themeButton');
    const themeMenu = document.querySelector('.theme-menu');
    const themeOptions = document.querySelectorAll('.theme-option');
    const themeIcon = themeButton.querySelector('i');

    // –ü–æ–∫–∞–∑–∞—Ç–∏/–ø—Ä–∏—Ö–æ–≤–∞—Ç–∏ –º–µ–Ω—é —Ç–µ–º
    themeButton.addEventListener('click', () => {
        themeMenu.classList.toggle('active');
    });

    // –ó–∞–∫—Ä–∏—Ç–∏ –º–µ–Ω—é –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–∏–º
    document.addEventListener('click', (e) => {
        if (!themeButton.contains(e.target) && !themeMenu.contains(e.target)) {
            themeMenu.classList.remove('active');
        }
    });

    // –ó–º—ñ–Ω–∞ —Ç–µ–º–∏
    themeOptions.forEach(option => {
        option.addEventListener('click', () => {
            const newTheme = option.dataset.theme;
            htmlElement.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            
            // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–∫–æ–Ω–∫—É –Ω–∞ –∫–Ω–æ–ø—Ü—ñ
            const icons = {
                'light': 'fa-sun',
                'dark': 'fa-moon',
                'yellow': 'fa-star'
            };
            themeIcon.className = `fas ${icons[newTheme]}`;
            
            themeMenu.classList.remove('active');
        });
    });

    // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—É —Ç–µ–º—É
    const savedTheme = localStorage.getItem('theme') || 'light';
    htmlElement.setAttribute('data-theme', savedTheme);
    const icons = {
        'light': 'fa-sun',
        'dark': 'fa-moon',
        'yellow': 'fa-star'
    };
    themeIcon.className = `fas ${icons[savedTheme]}`;

    // Slider functionality
    const slides = document.querySelectorAll('.slide');
    const prevButton = document.querySelector('.prev');
    const nextButton = document.querySelector('.next');
    const slidesContainer = document.querySelector('.slide-indicators');
    const reactionButtons = document.querySelectorAll('.reaction-btn');
    let currentSlide = 0;
    let slideInterval;

    // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ –¥–ª—è —Å–ª–∞–π–¥—ñ–≤
    slides.forEach((_, index) => {
        const indicator = document.createElement('div');
        indicator.classList.add('indicator');
        if (index === 0) indicator.classList.add('active');
        indicator.addEventListener('click', () => showSlide(index));
        slidesContainer.appendChild(indicator);
    });

    const indicators = document.querySelectorAll('.indicator');

    function showSlide(index) {
        slides.forEach(slide => slide.classList.remove('active'));
        indicators.forEach(ind => ind.classList.remove('active'));
        
        if (index >= slides.length) {
            currentSlide = 0;
        } else if (index < 0) {
            currentSlide = slides.length - 1;
        } else {
            currentSlide = index;
        }

        slides[currentSlide].classList.add('active');
        indicators[currentSlide].classList.add('active');
    }

    function startSlideshow() {
        if (slideInterval) clearInterval(slideInterval);
        slideInterval = setInterval(() => {
            showSlide(currentSlide + 1);
        }, 5000);
    }

    // Floating Elements Animation
    function createFloatingElement() {
        const elements = ['üå∏', 'üå∫', 'üåπ', 'üå∑', '‚ú®', '‚≠ê', '‚ù§Ô∏è'];
        const element = document.createElement('div');
        element.className = 'floating-element';
        element.textContent = elements[Math.floor(Math.random() * elements.length)];
        
        // –í–∏–ø–∞–¥–∫–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—ñ
        element.style.left = Math.random() * 90 + 5 + '%';
        
        // –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ä–æ–∑–º—ñ—Ä
        const size = Math.random() * 1 + 1;
        element.style.fontSize = size + 'rem';
        
        document.querySelector('.floating-elements').appendChild(element);

        // –í–∏–¥–∞–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
        element.addEventListener('animationend', () => element.remove());
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ —Ä—ñ–∑–Ω–∏–º–∏ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
    function startFloatingElements() {
        // –ü–æ—á–∞—Ç–∫–æ–≤–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
        for(let i = 0; i < 3; i++) {
            setTimeout(createFloatingElement, i * 800);
        }
        
        // –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –Ω–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
        setInterval(() => {
            if(document.querySelectorAll('.floating-element').length < 10) {
                createFloatingElement();
            }
        }, 2000);
    }

    startFloatingElements();

    prevButton.addEventListener('click', () => {
        showSlide(currentSlide - 1);
        startSlideshow();
    });

    nextButton.addEventListener('click', () => {
        showSlide(currentSlide + 1);
        startSlideshow();
    });

    // –î–æ–¥–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–µ–∞–∫—Ü—ñ–π
    reactionButtons.forEach(button => {
        button.addEventListener('click', () => {
            const emoji = button.dataset.emoji;
            for (let i = 0; i < 3; i++) {
                const particle = document.createElement('span');
                particle.textContent = emoji;
                particle.style.position = 'fixed';
                particle.style.left = `${button.getBoundingClientRect().left + button.offsetWidth/2}px`;
                particle.style.top = `${button.getBoundingClientRect().top}px`;
                particle.style.fontSize = '2rem';
                particle.style.pointerEvents = 'none';
                document.body.appendChild(particle);

                const angle = (Math.random() - 0.5) * Math.PI;
                const velocity = 5 + Math.random() * 5;

                const animation = particle.animate([
                    {
                        transform: 'translate(-50%, 0) scale(1)',
                        opacity: 1
                    },
                    {
                        transform: `translate(${Math.sin(angle) * 100}px, ${-velocity * 50}px) scale(1.5)`,
                        opacity: 0
                    }
                ], {
                    duration: 1000,
                    easing: 'cubic-bezier(0.4, 0, 0.2, 1)'
                });

                animation.onfinish = () => particle.remove();
            }
            
            button.style.transform = 'scale(0.95)';
            setTimeout(() => button.style.transform = '', 150);
        });
    });

    // –î–æ–¥–∞—î–º–æ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª–∞–≤—ñ—à–∞–º–∏
    document.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowLeft') {
            showSlide(currentSlide - 1);
            startSlideshow();
        } else if (e.key === 'ArrowRight') {
            showSlide(currentSlide + 1);
            startSlideshow();
        }
    });

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–ª–∞–π–¥—à–æ—É
    startSlideshow();

    // Magic Bubbles
    const bubblesContainer = document.querySelector('.magic-bubbles');
    const compliments = {
        uk: [
            "–¢–∏ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∞! ‚ú®",
            "–¢–≤–æ—è –ø–æ—Å–º—ñ—à–∫–∞ –æ—Å—è—é—î –≤–µ—Å—å –õ–æ–Ω–¥–æ–Ω! üåü",
            "–¢–∏ —Ä–æ–±–∏—à —Å–≤—ñ—Ç –∫—Ä–∞—â–∏–º! üåç",
            "–¢–≤–æ—ó –º—Ä—ñ—ó –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –∑–¥—ñ–π—Å–Ω—è—Ç—å—Å—è! üéØ",
            "–¢–∏ —Å–ø—Ä–∞–≤–∂–Ω—è –∫–æ—Ä–æ–ª–µ–≤–∞! üëë",
            "–¢–≤–æ—è –µ–Ω–µ—Ä–≥—ñ—è –∑–∞—Ä—è–¥–∂–∞—î –≤—Å—ñ—Ö –Ω–∞–≤–∫–æ–ª–æ! ‚ö°",
            "–¢–∏ —Ä–æ–±–∏—à –Ω–µ–º–æ–∂–ª–∏–≤–µ –º–æ–∂–ª–∏–≤–∏–º! üåà",
            "–õ–æ–Ω–¥–æ–Ω –ø–æ—â–∞—Å—Ç–∏–ª–æ –∑ —Ç–æ–±–æ—é! üá¨üáß",
            "–¢–∏ —Å–ø—Ä–∞–≤–∂–Ω—î —Å–æ–Ω–µ—á–∫–æ! ‚òÄÔ∏è",
            "–¢–≤—ñ–π —É—Å–ø—ñ—Ö –Ω–∞–¥–∏—Ö–∞—î! üåü"
        ],
        en: [
            "You're amazing! ‚ú®",
            "Your smile lights up London! üåü",
            "You make the world better! üåç",
            "Your dreams will come true! üéØ",
            "You're a true queen! üëë",
            "Your energy is contagious! ‚ö°",
            "You make impossible possible! üåà",
            "London is lucky to have you! üá¨üáß",
            "You're a real sunshine! ‚òÄÔ∏è",
            "Your success inspires! üåü"
        ]
    };

    let lastBubbleTime = 0;
    const BUBBLE_COOLDOWN = 800; // –∑–±—ñ–ª—å—à—É—î–º–æ —á–∞—Å –º—ñ–∂ –±—É–ª—å–±–∞—à–∫–∞–º–∏
    let lastMouseX = 0;
    let lastMouseY = 0;
    const MOUSE_DISTANCE_THRESHOLD = 100; // –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –≤—ñ–¥—Å—Ç–∞–Ω—å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –±—É–ª—å–±–∞—à–∫–∏

    function createBubble(x, y) {
        const currentTime = Date.now();
        if (currentTime - lastBubbleTime < BUBBLE_COOLDOWN) return;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—ñ–¥—Å—Ç–∞–Ω—å –≤—ñ–¥ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –ø–æ–∑–∏—Ü—ñ—ó –º–∏—à—ñ
        const distance = Math.sqrt(Math.pow(x - lastMouseX, 2) + Math.pow(y - lastMouseY, 2));
        if (distance < MOUSE_DISTANCE_THRESHOLD && lastMouseX !== 0) return;

        lastMouseX = x;
        lastMouseY = y;
        lastBubbleTime = currentTime;

        const bubble = document.createElement('div');
        bubble.className = 'magic-bubble';
        
        const currentLang = document.documentElement.getAttribute('data-lang');
        const complimentsList = compliments[currentLang];
        const randomCompliment = complimentsList[Math.floor(Math.random() * complimentsList.length)];
        
        bubble.textContent = randomCompliment;
        bubble.style.left = `${x - 50}px`;
        bubble.style.top = `${y - 50}px`;
        
        // –í–∏–ø–∞–¥–∫–æ–≤–∏–π —Ä–æ–∑–º—ñ—Ä –±—É–ª—å–±–∞—à–∫–∏
        const size = Math.random() * 50 + 100;
        bubble.style.width = `${size}px`;
        bubble.style.height = `${size}px`;

        bubblesContainer.appendChild(bubble);
        
        // –í–∏–¥–∞–ª—è—î–º–æ –±—É–ª—å–±–∞—à–∫—É –ø—ñ—Å–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó
        bubble.addEventListener('animationend', () => bubble.remove());
    }

    // –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –º–∏—à—ñ –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é —à–≤–∏–¥–∫–æ—Å—Ç—ñ —Ä—É—Ö—É
    let isCreatingBubble = false;
    document.addEventListener('mousemove', (e) => {
        if (!isCreatingBubble) {
            isCreatingBubble = true;
            createBubble(e.clientX, e.clientY);
            setTimeout(() => {
                isCreatingBubble = false;
            }, BUBBLE_COOLDOWN);
        }
    });

    // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç –ø—ñ–¥–∫–∞–∑–∫–∏ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤
    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    const hintElement = document.querySelector('.magic-hint');
    if (isMobile) {
        const ukHint = hintElement.querySelector('.uk-text');
        const enHint = hintElement.querySelector('.en-text');
        ukHint.textContent = '–¢–æ—Ä–∫–∞–π—Å—è –µ–∫—Ä–∞–Ω—É, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –º–∞–≥—ñ—é!';
        enHint.textContent = 'Touch the screen to see the magic!';
    }

    // Magic Mode
    const title = document.querySelector('.title');
    let clickCount = 0;
    let lastClickTime = 0;

    title.addEventListener('click', () => {
        const currentTime = Date.now();
        if (currentTime - lastClickTime > 500) {
            clickCount = 1;
        } else {
            clickCount++;
        }
        lastClickTime = currentTime;

        if (clickCount === 3) {
            document.body.classList.toggle('magic-mode');
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–µ—î—Ä–≤–µ—Ä–∫
            for (let i = 0; i < 20; i++) {
                setTimeout(() => {
                    const x = Math.random() * window.innerWidth;
                    const y = Math.random() * window.innerHeight;
                    createBubble(x, y);
                }, i * 100);
            }
            
            // –î–æ–¥–∞—î–º–æ –∑–≤—É–∫–æ–≤–∏–π –µ—Ñ–µ–∫—Ç
            const audio = new Audio('https://www.soundjay.com/misc/sounds/magic-chime-01.mp3');
            audio.volume = 0.3;
            audio.play().catch(() => {}); // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ –±—Ä–∞—É–∑–µ—Ä –±–ª–æ–∫—É—î –∞–≤—Ç–æ–≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è
            
            clickCount = 0;
        }
    });
}); 